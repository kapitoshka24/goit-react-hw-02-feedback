{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","options","total","positivePercentage","capitalize","Object","entries","map","key","value","shortId","generate","FeedbackOptions","onLeaveFeedback","className","keys","onClick","Section","title","children","Notification","message","App","state","good","neutral","bad","string","charAt","toUpperCase","slice","evt","target","innerHTML","toLowerCase","setState","prevState","countTotalFeedback","values","reduce","prev","curr","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA2BeA,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,mBAAoBC,EAAvC,EAAuCA,WAAvC,OACjB,qCACE,4CAECC,OAAOC,QAAQL,GAASM,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC3B,8BACGL,EAAWI,GADd,KACsBC,IADdC,IAAQC,eAKlB,wCAAWT,OAEX,oDAAuBC,IAAvB,WCWWS,G,KAtBS,SAAC,GAA8C,IAA5CX,EAA2C,EAA3CA,QAASY,EAAkC,EAAlCA,gBAAiBT,EAAiB,EAAjBA,WACnD,OACE,qBAAKU,UAAU,QAAf,SACGT,OAAOU,KAAKd,GAASM,KAAI,SAACC,GAAD,OACxB,wBACEM,UAAU,aAEVE,QAASH,EAHX,SAKGT,EAAWI,IAHPE,IAAQC,mBCIRM,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACGD,GAAS,6BAAKA,IACdC,MCIUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGP,UAAU,eAAb,SAA6BO,KC2DpDC,E,4MAvDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPtB,WAAa,SAACuB,GACZ,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,EAGvDjB,gBAAkB,SAACkB,GACjB,IAAMvB,EAAMuB,EAAIC,OAAOC,UAAUC,cAEjC,EAAKC,UAAS,SAACC,GAAD,sBACX5B,EAAM4B,EAAU5B,GAAO,O,EAI5B6B,mBAAqB,WACnB,OAAOhC,OAAOiC,OAAO,EAAKf,OAAOgB,QAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAQC,IAAO,I,EAG1EC,gCAAkC,WAChC,OAAqC,IAA9B,EAAKL,sBACN,EAAKd,MAAMC,KAAO,EAAKa,qBAAwB,KAAKM,UACtD,G,4CAGN,WACE,OACE,qCACE,cAAC,EAAD,CAASzB,MAAM,6BAAf,SACE,cAAC,EAAD,CACEjB,QAAS2C,KAAKrB,MACdV,gBAAiB+B,KAAK/B,gBACtBT,WAAYwC,KAAKxC,eAGpBwC,KAAKP,qBACJ,cAAC,EAAD,UACE,cAAC,EAAD,CACEpC,QAAS2C,KAAKrB,MACdrB,MAAO0C,KAAKP,mBACZlC,mBAAoByC,KAAKF,gCACzBtC,WAAYwC,KAAKxC,eAIrB,cAAC,EAAD,CAAciB,QAAQ,6B,GAjDdwB,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0bc6ed2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport shortId from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ options, total, positivePercentage, capitalize }) => (\r\n  <>\r\n    <h2>Statistics</h2>\r\n\r\n    {Object.entries(options).map(([key, value]) => (\r\n      <p key={shortId.generate()}>\r\n        {capitalize(key)}: {value}\r\n      </p>\r\n    ))}\r\n\r\n    <p>Total: {total()}</p>\r\n\r\n    <p>Positive feedback: {positivePercentage()}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number),\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n  capitalize: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport shortId from \"shortid\";\r\nimport \"../../styles/main.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback, capitalize }) => {\r\n  return (\r\n    <div className=\"stats\">\r\n      {Object.keys(options).map((key) => (\r\n        <button\r\n          className=\"stats__btn\"\r\n          key={shortId.generate()}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {capitalize(key)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  capitalize: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport \"../../styles/main.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p className=\"notification\">{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification/\";\nimport \"./styles/main.scss\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  capitalize = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  onLeaveFeedback = (evt) => {\n    const key = evt.target.innerHTML.toLowerCase();\n\n    this.setState((prevState) => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((prev, curr) => (prev += curr), 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback() !== 0\n      ? ((this.state.good / this.countTotalFeedback()) * 100).toFixed()\n      : 0;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n            capitalize={this.capitalize}\n          ></FeedbackOptions>\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section>\n            <Statistics\n              options={this.state}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n              capitalize={this.capitalize}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}